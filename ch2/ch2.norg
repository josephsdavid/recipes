@document.meta
  title: Solution of Linear Algebraic Equations
  description: 
  authors: david
  categories: 
  created: 2022-02-14
  version: 0.0.11
@end

=TOC

* Introduction
  Matrix representation of linear algebraic equations:

  @code 
                                                      ┌─      ──┐
      ┌─                                   ──┐        │  b0     │
      │ a0        a01        ...   a(0)(N-1) │        │  b1     │
   A =│ a10       a11        ...   a(0)(N-1) │    b = │  ...    │
      │ a(M-1)(0) a(M-1)(1)  ...   a(0)(N-1) │        │  ...    │
      └─                                   ──┘        │  b(M-1) │
                                                      └─      ──┘
  @end
  Then we can represent the equation as 
  @math  
  A  ̇ x  = b
  @end
  Dot can be represented as:
  @math  
  C = A  ̇ b ⟺   c_ik = ∑aijbjk
  @end
  In situations where M = N, we have only an ok chance of solving! Why?

 ** Nonsingular vs singular sets of equations
    > Why is M = N so difficult?
    - *row degeneracy* /when one or more of the equations is a linear combination of the others/
    - *column degeneracy* /some variables only exist in just one linear combination/
    The types of degeneracy imply each other. 
    - *singular* /set of equations that are degenerate/
    - if N is very large, answers will be wrong due to accumulated roundoff errors.
    -- The closer to singularity we are, the more likely this will happen, due to increasingly close cancellations. 
    - Sometimes, the equations may be so close to linear dependence that roundoff errors render them linearly dependent. This can be viewed as a special case of the previous issue.
    
    Most of the sophisitication of linear solvers is devoted to detecting and correcting these two issues.
 ** Tasks of Comp LA (topics in this chapter)
    With M = N:
    - solution of equation $A  ̇ x = b$ for x
    - solution of many matrix equations with A held constant for a set of vectors
    - Calculation of the inverse of A
    - calculation of determinant
    With M < N or M = N with degeneracy, there are fewer equations than unknowns. Either no solution, or more than one solution. In the latter event the solution space consists of a particular solution added to any linear combination. Available tasks:
    - SVD, which finds the solution space
    With M > N, there are more equations than unknowns, and the system is *overdetermined*. The best compromise solution here is to find the solution that comes closest to solving all equations simultaneously. If we define closeness as least squares, we arrive at the:
    - linear least sequares problem
    Other tasks:
    - iterative improvement of solutions
    - special forms of the linear algebra problems
    - fast matrix inversion

 

